const { MessageMedia } = require('whatsapp-web.js');
const { delay, getImagePath, formatPhone } = require('../utils/helpers');
require('dotenv').config();

class MessageService {
    constructor(client) {
        this.client = client;
    }

    async sendInvitation(guest) {
        const phone = formatPhone(guest.phone);
        const chatId = `${phone}@c.us`;

        let guestsAtTable = '';
        if (Array.isArray(guest.guestsAtTable) && guest.guestsAtTable.length > 0) {
            const guests = guest.guestsAtTable.map(name => name.toUpperCase()).join('\n');
            guestsAtTable = `Os demais convidados do convite s√£o:\n ${guests}\n`
        }

        const tableNum = `MESA N√öMERO: ${guest.table}\n`
        const mainMessage = `Querido (a) ${guest.name}\n
Enfim o grande dia chegou! Estamos felizes por voc√™ estar conosco, partilhando desse momento t√£o especial. \n
Para seu conforto e melhor organiza√ß√£o do evento, gostar√≠amos de deixar aqui duas orienta√ß√µes bem importantes: \n
* A cerim√¥nia e a recep√ß√£o/festa acontecer√£o no mesmo local. Portanto, haver√° dois momentos: 1) a realiza√ß√£o da cerim√¥nia; e 2) a recep√ß√£o/festa

* Todos os convidados com contato telef√¥nico cadastrados no site receberam uma imagem com o n√∫mero da mesa a ser ocupada durante a recep√ß√£o/festa. Essa informa√ß√£o poder√° ser confirmada logo ao chegar no evento. Se tiver d√∫vidas, basta perguntar √† recepcionista no local do evento.

${tableNum}
${guestsAtTable}

Esperamos que se divirtam e desejamos um √≥timo evento a todos!

Endere√ßo: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Carinhosamente, \n
Gih & Dani`;
        
        try {
            const media = await MessageMedia.fromFilePath(getImagePath(guest.table));
            console.log(`üì® Sending image to ${guest.name} (${chatId})...`);
            await this.client.sendMessage(chatId, media, { caption: mainMessage });
            console.log(`‚úîÔ∏è Invite sent to ${guest.name}`);
            return true;
        } catch (err) {
            console.error(`‚ùå Error sending to ${guest.name} (${phone}):`, err.message);
            return false;
        }
    }

    async sendInvitationsToAllGuests(guests) {
        console.log('‚úÖ Connecting. Sending invitation...');
        
        for (const guest of guests) {
            await this.sendInvitation(guest);
            await delay(3000);
        }

        console.log('üì§ All invitations have been sent!');
    }
}

module.exports = MessageService; 